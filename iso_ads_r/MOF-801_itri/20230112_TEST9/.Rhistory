install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
df <- data.frame(serial = c(1:10), value=c(2:20))
c(1:10)
df <- data.frame(serial = c(1:10), value=c(1:10))
print(df)
ggplot(data=df)+
geom_point(mapping=aes(x=serial, y=value))
install.packages("tidyverse")
.libPaths('C:/Users/A70459/AppData/Local/R/win-library/4.2')
.libPaths
.libPaths()
install.packages("tidyverse")
install.packages("tidyverse")
install.packages(c("ggplot2", "reshape2", "dplyr"))
install.packages("Rtools")
install.packages("tidyverse")
.libPaths("C:\Users\A70459\Documents\my_r_projects")
.libPaths()
install.pacakges("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
library(tiidyverse)
library(tidyverse)
df <- data.frame(x=c(1:10), y=c(1:10))
ggplot(data=df)+
geom_point(mapping=aes(x=x, y=y))
ggplot(data=df, mapping=aes(x=x, y=y))+
geom_point()+
geom_smooth()
# Arrange Rows with arrange()
arrange(flights, year, month, day)
library(tidyverse)
library(ggplot2)
library(nycflights13)
# Arrange Rows with arrange()
arrange(flights, year, month, day)
arrange(flights, desc(arr_delay))
num_range("x", 1:3)
?one_of()
?one_of
one_of(flights)
vars <- c(
"year", "month", "day", "dep_delay", "arr_delay"
)
one_of(flights, vars)
select(flights, one_of())
select(flights, one_of(vars))
view(select(flights, one_of(vars)))
view(flights)
view(flights)
select(flights, contains("TIME"))
setwd("~/my_r_projects/iso_ads_r/MOF-801_itri/20230112_TEST9")
dataset <- read_excel("dataset.xlsx")
library(tidyverse)
library(ggplot2)
library(readxl)
library(plotly)
dataset <- read_excel("dataset.xlsx")
colnames(dataset)
p <- ggplot(data=dataset)+
geom_point(mapping=aes(x=time_s/3600, y=uptake*100,,color='uptake'))+
geom_point(mapping=aes(x=time_s/3600, y=hpv, color='humidity'))+
ylab("water uptake/ humidity")+
xlab('time (hr)')+
theme_test()
ggplotly(p)
df_excel <- read_excel("dataset.xlsx")
write.csv(df_excel, "dataset.csv")
df_csv <- read.csv("dataset.csv")
colnames(df_csv)
# data clean
df_clean <- df_csv %>% filter(time_s/3600>=3) %>%
filter(!((time_s/3600 >= 5.267 & time_s/3600 <= 5.359) & (hpv >= 14.80 & hpv <= 20.28)))
p1 <- ggplot(data=df_clean)+
geom_point(mapping=aes(x=time_s/3600, y=uptake*100, color='uptake'))+
geom_point(mapping=aes(x=time_s/3600, y=hpv, color='hpv'))+
ylim(0, 100)+
labs(x="time (min)", y="uptake/ humidity")+
theme_bw()
ggplotly(p1)
p2 <- ggplot(data=df_clean)+
geom_point(mapping=aes(x=hpv, y=uptake*100, color='uptake'))+
xlim(0, 100)+
labs(x="humidity", y="uptake")+
theme_bw()
ggplotly(p2)
humidity = c(9.50, 19.62, 29.95, 40.18, 50.33,63.30,70.02,80.05,89.91)
water_uptake = c(24.653,30.923, 32.788, 33.576, 34.211,34.865,35.230,35.903,37.615)
point_pick = data.frame(humidity, water_uptake)
write.csv(point_pick, 'point_pick.csv', row.names = FALSE)
p3 <- ggplot(data=point_pick, mapping=aes(x=humidity, y=water_uptake, color='uptake'))+
geom_point()+
geom_smooth(se=FALSE)+
labs(x="humidity (%RH)", y="uptake (wt.%)")+
xlim(0,100)+
theme_bw()
ggplotly(p3)
# group_by data
df_group <- df_clean %>%
mutate(hpv_1 = round(hpv,1)) %>%
group_by(hpv_1) %>%
summarise(uptake_max = max(uptake), uptake_mean = mean(uptake))
df_dropna <- drop_na(df_group)
write.csv(df_group, "result_r.csv", row.names = FALSE)
# smoothing
p <- ggplot(data=df_group)+
geom_point(mapping=aes(x=hpv_1, y=uptake_mean*100))+
geom_smooth(mapping=aes(x=hpv_1, y=uptake_mean*100))+
ylab('water uptake (wt.%)')+
xlab('humidity (%RH)')+
xlim(0,100)+
theme_test()
ggplotly(p)
install.packages("tidyverse", repos = "http://cran.us.r-project.org")
install.packages("ggplot2", repos = "http://cran.us.r-project.org")
install.packages("readxl", repos = "http://cran.us.r-project.org")
install.packages("plotly", repos = "http://cran.us.r-project.org")
library(tidyverse)
library(ggplot2)
library(readxl)
library(plotly)
p2 <- ggplot(data=df_clean)+
geom_point(mapping=aes(x=hpv, y=uptake*100, color='uptake'))+
labs(x="Humidity (%RH)", y="water uptake (wt.%)")+
theme_bw()
ggplotly(p2)
p <- ggplot(data=df_group)+
geom_point(mapping=aes(x=hpv_1, y=uptake_mean*100))+
geom_smooth(mapping=aes(x=hpv_1, y=uptake_mean*100))+
ylab('water uptake (wt.%)')+
xlab('humidity (%RH)')+
xlim(0,100)+
theme_test()
ggplotly(p)
tinytex::install_tinytex()
